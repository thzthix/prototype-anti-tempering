version: '3.8'

services:
  scraper:
    container_name: scraper
    build:
      context: .
      dockerfile: ./scraper/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - app_network

  exporter:
    container_name: exporter
    build:
      context: .
      dockerfile: ./exporter/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  #  prometheus:
#    image: prom/prometheus:v2.37.0
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./monitoring/prometheus:/etc/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'

#  grafana:
#    image: grafana/grafana:9.1.0
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning

  db:
    container_name: db
    image: postgres:17
    environment:
      POSTGRES_USER: proto
      POSTGRES_PASSWORD: type
      POSTGRES_DB: prototype
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U proto -d prototype"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
